name: Build Android APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Buildozer and dependencies
      run: |
        pip install buildozer cython
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-17-jdk autoconf libtool pkg-config zlib1g-dev libncurses-dev cmake libffi-dev libssl-dev
        
    - name: Pre-configure Android licenses
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        # Предварительно создаем файлы лицензий
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > ~/.android/android-sdk-license
        echo "84831b9409646a918e30573bab4c9c91346d8abd" >> ~/.android/android-sdk-license
        
    - name: Build APK
      run: |
        # Даем время на скачивание SDK
        echo "Ожидаем загрузку Android SDK..."
        sleep 45
        
        # Ищем sdkmanager в нескольких возможных местах
        SDKMANAGER_PATH=$(find /home/runner/.buildozer -name "sdkmanager" -type f 2>/dev/null | head -1)
        
        if [ -z "$SDKMANAGER_PATH" ]; then
          echo "sdkmanager не найден, пробуем альтернативные пути..."
          # Пробуем другие возможные пути
          SDKMANAGER_PATH=$(find /usr/local/lib -name "sdkmanager" -type f 2>/dev/null | head -1)
        fi
        
        echo "Found sdkmanager at: $SDKMANAGER_PATH"
        
        # Принимаем лицензии если нашли sdkmanager
        if [ -n "$SDKMANAGER_PATH" ] && [ -x "$SDKMANAGER_PATH" ]; then
          echo "Принимаем лицензии Android SDK..."
          yes | $SDKMANAGER_PATH --licenses || echo "Лицензии уже приняты или ошибка"
        else
          echo "sdkmanager не найден или недоступен, продолжаем сборку..."
        fi
        
        # Запускаем сборку
        buildozer -v android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-apk
        path: bin/*.apk
